/* reset(重置) 即重置样式  存放所有样式的实现 */
// 引用对应的样式变量
@import './variables';
* {
  box-sizing: border-box;/* 盒子模型 */
  outline: none; /* 去掉元素默认的轮廓 */
}
html {
  font-size: 13px; /* 设置页码整体默认的字体大小 */
}
body { 
  margin: 0; /* body默认是有内边距的 */
  font-family: Arial, Helvetica, sans-serif; /* 字体 */
  line-height: 1.2em; /* 行高 */
  background: #f1f1f1;
  -webkit-font-smoothing: antialiased; // 字体平滑 苹果设备
}
a {
  color: #999; /* 默认链接文字颜色 */
}
p {
  line-height: 1.5rem;
}

// $colorKey表示上述的"primary"，$color表示后面的值#db9e3f
@each $colorKey, $color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  // 上述定义好 就可使用 .text-primary 类来设置文字颜色
  .bg-#{$colorKey} {
    background-color: $color;
  }
  // 上述定义好 就可使用 .bg-primary 类来设置背景颜色
}

/* text align 文字的对其方式 */
// each循环 $var 表示变量 list是集合可以是上述的变量$colors
// (...)或者是直接量 如下
@each $var in (left, center, right) {
  .text-#{$var} { // 工具类，即会生成左中右对其
    text-align: $var !important;
  }
  // 上述定义好 就可使用 .text-left 类 来设置文字对其方式
}

@each $sizeKey, $size in $font-sizes {
  .fs-#{$sizeKey} {
    // $size 即对应的数值 $base-font-size 是基础大小
    // 如上 0.7692 * 1rem = 0.7692rem
    font-size: $size * $base-font-size;
  }
  // 上述定义好 就可使用 .fs-xs 类 来设置字体大小了
  // 以后字体大小更改 修改html的字体大小即可
}

/* 文字溢出显示三个... text overflow */
.text-ellipsis {
  display: inline-block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* width,height 宽度和高度样式 */
.w-100 { // 宽度
  width: 100%;
}
.h-100 { // 高度
  height: 100%;
}

/* flex 布局 */
.d-flex { // 默认水平布局
  display: flex;
}
.flex-column { // 垂直布局
  flex-direction: column;
}
.flex-wrap { // 可以换行
  flex-wrap: wrap;
}

@each $key, $value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
  // 上述完成后，就可使用 .jc-star 来让元素靠左 即设置元素的位置
}

@each $key, $value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
  // 上述完成后，就可使用 .ai-star 来让元素靠上/顶 即设置元素的位置
}
.flex-1 { // 拉伸
  flex: 1;
}
.flex-grow-1 { // 拉伸
  flex-grow: 1;
}

// 尺寸
@each $typeKey, $type in $spacing-types { // 循环边距类型
  // .m-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size;
    }
    // 上述完成使用 .m-1 即表示 margin: 0.25rem
  }
  // .mx-1 .my-1
  @each $sizeKey, $size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $spacing-base-size;
      #{$type}-right: $size * $spacing-base-size;
    }
    // 使用 .mx-0 即表示 margin-left: 0rem;margin-right: 0rem;
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
    // 使用 .my-0 即表示 margin-top: 0rem;margin-bottom: 0rem;
  }
  // .mt-1
  @each $directionKey, $direction in $spacing-directions { // 循环边距方位
    @each $sizeKey, $size in $spacing-sizes { // 循环边距大小
      // .mt-0 => margin-top: 0;
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size;
      }
      // 上述定义完成后 使用 .mt-0 即表示margin-top: 0rem 设置边距
    }
  }
}
/* button 按钮 */
.btn {
  border: none; // 去掉按钮边框
  border-radius: 0.1538rem; // 设置按钮圆角
  // 默认按钮文字大小 获取上述定义的文字大小
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: 0.2rem 0.6rem; // 按钮内边距
  &.btn-lg { // 大按钮样式 &表示 .btn.btn-lg
    display: flex;
    justify-content: center;
    align-items: center;
    i {
      color: map-get($colors, 'primary');
      font-weight: 700;
      font-size: 1.5rem;
      margin-right: 0.5rem;
    }
    background: map-get($colors, 'white-1');
    border: 1px solid map-get($colors, 'white-2');
    padding: 0.8rem 1rem;
    font-size: 1rem;
    border-radius: .4rem;
  }
}
/* nav */
.nav { // 设置选中后的底部边框
  display: flex; // 导航默认flex布局 横向排列
  .nav-item { // 统一加透明边框 下述在加实体边框 为了使其保证居中对齐
    border-bottom: 3px solid transparent;
    padding-bottom: 0.2rem; // 让边框下移点距离
    &.active { // &表示该类的上一层 默认选中的项 边框颜色
      color: map-get($colors, 'primary'); // 默认文字颜色
      border-bottom-color: map-get($colors, 'primary');
    }
  }
  &.nav-inverse { // 反色，即和上述nav-item相反的颜色
    .nav-item {
      color: map-get($colors, 'white');
      &.active {
        border-bottom-color: map-get($colors, 'white');
      }
    }
  }
}
/* sprite 精灵图 */
.sprite { // 精灵图的图片
  background: url(../images/index.png) no-repeat 0 0;
  background-size: 28.8462rem; // 375px的rem值，即二倍图
  display: inline-block; // 转为行内元素 即可以设置宽和高
  &.sprite-news { // 里面对应的单个图标
    width: 1.7692rem;
    height: 1.5385rem;
    background-position: 63.546% 15.517%;
  }
  /* &.sprite-story {} 再次写 故事会 等单个图标的定位 */
  &.sprite-arrow {
    width: 0.7692rem;
    height: 0.7692rem;
    background-position: 38.577% 52.076%;
  }
}

// borders 边框
@each $dir in (top, right, bottom, left) {
  .border-#{$dir} {
    border-#{$dir}: 1px solid $border-color;
  }
  // 上述完成 可使用 .border-top 添加上边框等样式
}